/*
  In PostgreSQL, a sequence is a special kind of database object that generates a sequence of integers.
  A sequence is often used as the primary key column in a table.

  When creating a new table, the sequence can be created through the SERIAL pseudo-type:

    CREATE TABLE table_name(
        id SERIAL
    );

  Behind the scenes:

    CREATE SEQUENCE table_name_id_seq;

    CREATE TABLE table_name (
        id integer NOT NULL DEFAULT nextval('table_name_id_seq')
    );

    ALTER SEQUENCE table_name_id_seq
    OWNED BY table_name.id;
    Steps:
    First, create a sequence object and set the next value generated by the sequence as the default value for the column.
    Second, add a NOT NULL constraint to the id column because a sequence always generates an integer, which is a non-null value.
    Third, assign the owner of the sequence to the id column; as a result, the sequence object is deleted when the
    id column or table is dropped.

  PostgreSQL provides three serial pseudo-types SMALLSERIAL, SERIAL, and BIGSERIAL with the following characteristics:

    SMALLSERIAL   2 bytes   1 to 32,767
    SERIAL        4 bytes   1 to 2,147,483,647
    BIGSERIAL     8 bytes   1 to 9,223,372,036,854,775,807

  To get the sequence name of a SERIAL column in a table, use the pg_get_serial_sequence('table_name', 'column_name') function.

*/

CREATE TABLE test_users (
  id SERIAL PRIMARY KEY,
  first_name VARCHAR(40) NOT NULL,
  last_name VARCHAR(50) NOT NULL
);

INSERT INTO
  test_users
VALUES (default,'Dima', 'Maksyutenko'),
        (default, 'Anna', 'Pacelya'),
        (default, 'Vova', 'Vsovichenko');

SELECT pg_get_serial_sequence('test_users', 'id');

DROP TABLE IF EXISTS test_users;
