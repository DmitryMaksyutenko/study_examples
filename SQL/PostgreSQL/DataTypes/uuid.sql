/*
    The data type UUID stores Universal Unique Identifier.

    This identifier is a 128-bit quantity that is generated by an algorithm chosen to
    make it very unlikely that the same identifier will be generated by anyone else in
    the known universe using the same algorithm.

    Therefore, for distributed systems, these identifiers provide a better uniqueness guarantee than
    sequence generators, which are only umique within a single database.

    The UUID is written as a sequence of lower-case hexadecimal digits, in several groups separated by
    hyphens.

        a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11

    The PostgreSQL also accepts the following alternative forms for input:

        The upper-case digits:
            A0EEBC99-9C0B-4EF8-BB6D-6BB9BD380A11

        The standard form surrounded by braces:
            {a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11}

        The ommiting some or all hyphens:
            a0eebc999c0b4ef8bb6d6bb9bd380a11

        Adding a hyphen after any group of for digits:
            a0ee-bc99-9c0b-4ef8-bb6d-6bb9-bd38-0a11
            {a0eebc99-9c0b4ef8-bb6d6bb9-bd380a11}

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
    Output is always in the standard form.

    PostgreSQL allows to store and compare the UUID values, but it does not include
    functions for generating the UUID values in it's core.
    Instead, it relies on third-party modules that provide specific algorithms to
    generate UUIDs. For example:

        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
*/
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

SELECT uuid_generate_v1();

CREATE TABLE contacts (
    contact_id uuid DEFAULT uuid_generate_v4 (),
    first_name VARCHAR NOT NULL,
    last_name VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    phone VARCHAR,
    PRIMARY KEY (contact_id)
);


INSERT INTO contacts (
    first_name,
    last_name,
    email,
    phone
)
VALUES
    (
        'John',
        'Smith',
        'john.smith@example.com',
        '408-237-2345'
    ),
    (
        'Jane',
        'Smith',
        'jane.smith@example.com',
        '408-237-2344'
    ),
    (
        'Alex',
        'Smith',
        'alex.smith@example.com',
        '408-237-2343'
    );


SELECT
    *
FROM
    contacts;

DROP TABLE IF EXISTS contacts;
