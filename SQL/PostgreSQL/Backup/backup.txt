Backing up databases is one of the most critical tasks in database administration.
Before backing up the databases, you should consider the following points:

  Full / partial databases
  Both data and structures, or only structures
  Point In Time recovery
  Restore performance

PostgreSQL provides  pg_dump and pg_dumpalltools to help you backup databases easily and effectively

<-------------------------------------------------------------------------------------------------------->
ONE DATABASE BACKUP
To backup one database, use the  pg_dump tool. The pg_dump dumps out the content of all database objects
into a single file.

SYNOPSIS: pg_dump [connection-option...] [option...] [dbname]

Execute the pg_dump program and use the following options to backup the
"dvdrental" database to the  "dvdrental.tar" file in the  "folder" folder.

"sudo -u postgres pg_dump -U postgres -W -F t dvdrental > path/to/dvdrental.tar"

  -U postgres: specifies the user to connect to PostgreSQL database server.
    postgres in this example.

  -W: forces pg_dump to prompt for the password before connecting to the
    PostgreSQL database server. After hit enter, pg_dump will prompt for the
    password of postgres user.

  -F: specifies the output file format that can be one of the following:
    c: custom-format archive file format
    d: directory-format archive
    t: tar
    p: plain text SQL script file.
<-------------------------------------------------------------------------------------------------------->

ALL DATABASES BACKUP
To backup all databases, run the individual pg_dump command above sequentially, or parallel.

First, from the psql, use the command  \list to list all available databases in cluster.
Second, back up each individual database using the pg_dump program as described in the above section.

The pg_dumpall tool allows to backup all databases at once. However, it is not recommended
to use this tool because of the following reasons:

  The  pg_dumpall program exports all databases, one after another, into a single
  script file, which prevents from performing the parallel restore. If
  backup all databases this way, the restore process will take more time.

  The processing of dumping all databases takes longer than each individual one
  so it is do not understand which dump of each database relates to a specific point in
  time.

SYNOPSIS: pg_dumpall [connection-option...] [option...]

"sudo -u postgres pg_dumpall -U postgres > ./all.sql"
<-------------------------------------------------------------------------------------------------------->

BACKUP DATABASE OBJECT DEFINITION
Sometimes, need to backup only database object definitions so that can
restore the schema only. This is helpful in the test phase, which do not
want keep the old test data populated during the testing period.

To backup all objects in all databases, including roles, tablespaces,
databases, schemas, tables, indexes, triggers, functions, constraints, views,
ownerships and privileges, use the following command:
  sudo -u postgres pg_dumpall --schema-only > ./definitions.sql

Role definition only:
  sudo -u postgres pg_dumpall --roles-only > ./roles.sql

Tablespaces definition:
  sudo -u postgre spg_dumpall --tablespaces-only > ./tablespaces.sql
